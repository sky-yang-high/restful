definitions:
  taskstore.Task:
    properties:
      due:
        type: string
      id:
        type: integer
      tags:
        items:
          type: string
        type: array
      text:
        type: string
    type: object
info:
  contact: {}
paths:
  /task/{id}:
    get:
      parameters:
      - description: The ID of the task to retrieve
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The task with the given ID
          schema:
            $ref: '#/definitions/taskstore.Task'
        "400":
          description: Invalid task ID
          schema:
            type: string
      summary: GetTask returns the task with the given ID.
  /task/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/taskstore.Task'
            type: array
        "404":
          description: No tasks found
          schema:
            type: string
      summary: GetAllTasks returns all tasks in ts.
  /task/create:
    post:
      parameters:
      - description: The text of the task
        in: formData
        name: text
        required: true
        type: string
      - description: The tags of the task
        in: formData
        name: tags
        required: true
        type: array
      - description: The due time of the task in minutes
        in: formData
        name: due
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: The ID of the created task
          schema:
            type: integer
        "400":
          description: Invalid input
          schema:
            type: string
      summary: CreateTask creates a new task in ts and returns its ID.
swagger: "2.0"
